services:
  kafka:
    # https://hub.docker.com/r/bitnami/kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9094:9094' #1
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_BROKER_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094 #2
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094 #3
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT #4
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 15s
    networks:
      - kafka-network

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8080:8080'
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local #5
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092 #6
    networks:
      - kafka-network

  # Python gRPC server
  grpc-server:
    build:
      context: .
      dockerfile: ./python_server/Dockerfile
    container_name: grpc-server
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "50051:50051"
    environment:
      SERVER_ADDRESS: 0.0.0.0:50051
      NUM_THREADS: 8
      KAFKA_BROKERS: kafka:9092
      BATCH_SIZE: 10000
      LINGER_MS: 5
      RETRY_BACKOFF_MS: 100
      MESSAGE_TIMEOUT_MS: 30000
      COMPRESSION_TYPE: snappy
      ACKS: all
    volumes:
      - ./protos:/app/protos
    restart: unless-stopped
    networks:
      - kafka-network

volumes:
  kafka-data:

networks:
  kafka-network:
    name: kafka-network
    driver: bridge
